<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>demo</name>
	<groupId>fr.homezone</groupId>
	<artifactId>backbone</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<resthub.spring.stack.version>2.2.0</resthub.spring.stack.version>
		<maven.jetty.version>9.2.2.v20140723</maven.jetty.version>
		<jetty.port>8080</jetty.port>
	</properties>


	<profiles>
		<profile>
			<id>optimize</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.mcheely</groupId>
						<artifactId>requirejs-maven-plugin</artifactId>
						<version>2.0.0</version>
						<executions>
							<execution>
								<goals>
									<goal>optimize</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- path to optimizer json config file -->
							<configFile>${basedir}/src/main/webapp/js/build/build-config.js</configFile>
							<!-- optional path to optimizer executable -->
							<optimizerFile>${basedir}/src/main/webapp/js/build/r.js</optimizerFile>
							<!-- whether or not to process config with maven filters -->
							<filterConfig>true</filterConfig>
							<!-- Skip requirejs optimization if true -->
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<warSourceExcludes>js/**,css/**</warSourceExcludes>
							<packagingExcludes>%regex[js/libs/(?!require).*],js/templates/**</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.resthub</groupId>
			<artifactId>resthub-jpa</artifactId>
			<version>${resthub.spring.stack.version}</version>
		</dependency>
		<dependency>
			<groupId>org.resthub</groupId>
			<artifactId>resthub-web-server</artifactId>
			<version>${resthub.spring.stack.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.ovea</groupId>
			<artifactId>jetty-session-redis</artifactId>
			<version>2.4.ga-SNAPSHOT</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${maven.jetty.version}</version>
				<configuration>
					<!--
					<jettyXml>src/main/jetty/jetty.xml</jettyXml>
					-->
					<!-- ,jetty-ssl.xml,jetty-https.xml -->
				</configuration>
			</plugin>


			<!-- Plugin Markdown Doxia -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<configuration>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.3.3</version>
				<configuration>
					<imageName>Demo</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>snapshot</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<distributionManagement>
		<site>
			<id>website</id>
			<url>scp://webhost.company.com/www/website</url>
		</site>
	</distributionManagement>

</project>
